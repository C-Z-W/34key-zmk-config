// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W               &ht F17 E       &kp R       &ht F18 T      &ht C_AC_DESKTOP_SHOW_ALL_WINDOWS Y  &kp U       &kp I            &kp O                &kp P
&ht LEFT_SHIFT A  &ht LEFT_CONTROL S  &ht LEFT_ALT D  &ht LGUI F  &ht F15 G      &ht F13 H                            &ht RGUI J  &ht RIGHT_ALT K  &ht RIGHT_CONTROL L  &kp BSPC
&kp Z             &kp X               &kp C           &kp V       &ht F16 B      &ht F14 N                            &kp M       &kp COMMA        &kp DOT              &ht RSHIFT ENTER
                                                      &kp TAB     &lt 2 SPACE    &lt 3 ENTER                          &lt 5 F19
            >;
        };

        windows_layer {
            bindings = <
&kp Q  &kp W               &kp E           &kp R        &kp T         &kp Y      &kp U        &kp I            &kp O                &kp P
&kp A  &ht LEFT_COMMAND S  &ht LEFT_ALT D  &ht LCTRL F  &kp G         &kp H      &ht RCTRL J  &ht RIGHT_ALT K  &ht RIGHT_COMMAND L  &kp BSPC
&kp Z  &kp X               &kp C           &kp V        &kp B         &kp N      &kp M        &kp COMMA        &kp DOT              &kp ENTER
                                           &lt 2 TAB    &kp LSHIFT    &kp SPACE  &lt 3 TAB
            >;
        };

        Layer_2 {
            bindings = <
&kp N1          &kp N2          &kp N3        &kp N4           &kp N5                      &kp N6         &kp N7          &kp N8    &kp N9      &kp N0
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp C_VOLUME_UP             &kp C_BRI_UP   &kp C_PREVIOUS  &kp C_PP  &kp C_NEXT  &trans
&kp END         &kp PAGE_DOWN   &kp PAGE_UP   &kp HOME         &ht C_MUTE C_VOLUME_DOWN    &kp C_BRI_DEC  &kp GLOBE       &trans    &trans      &trans
                                              &trans           &trans                      &trans         &trans
            >;
        };

        Layer_3 {
            bindings = <
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
&kp DQT   &kp LBKT  &kp LBRC  &kp LPAR  &kp DELETE    &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
&kp SQT   &kp RBKT  &kp RBRC  &kp RPAR  &kp ESC       &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK
                              &trans    &trans        &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &bootloader   &bt BT_CLR    &trans        &trans        &trans
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &trans        &trans        &trans        &tog 1        &tog 5
                           &trans   &trans     &trans        &trans
            >;
        };

        mouse {
            bindings = <
&kp LEFT_SHIFT   &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp F18      &trans  &trans          &trans        &trans          &tog MOUSE
&msc SCRL_RIGHT  &msc SCRL_DOWN    &msc SCRL_UP  &msc SCRL_LEFT    &trans       &trans  &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT
&trans           &trans            &mkp MB5      &mkp MB4          &mkp MCLK    &trans  &trans          &trans        &trans          &trans
                                                 &mkp RCLK         &mkp LCLK    &trans  &trans
            >;
        };
    };
};
